//
//  StoryListWireframe.swift
//  TopStories
//
//  Created by Mozhgan on 8/30/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit

final class StoryListWireframe: BaseWireframe<StoryListViewController> {
    
    // MARK: - Private properties -
    private lazy var operationQueue : OperationQueue = {
        let operationQueue = OperationQueue()
        operationQueue.qualityOfService = .userInitiated
        operationQueue.maxConcurrentOperationCount = 4
        return operationQueue
    }()
    
    // MARK: - Module setup -
    
    init() {
        let moduleViewController = StoryListViewController(nibName: nil, bundle: nil)
        super.init(viewController: moduleViewController)
        let formatter = StoryListFormatter()
        let interactor = StoryListInteractor(worker: TopStoryNetworkManager(environment: APIEnvironment.production, sessionConfiguration: .default, queue: operationQueue))
        let presenter = StoryListPresenter(view: moduleViewController, formatter: formatter, interactor: interactor, wireframe: self)
        moduleViewController.presenter = presenter
    }
    
}

// MARK: - Extensions -

extension StoryListWireframe: StoryListWireframeInterface {
    func routeTo(desination: StoryListDesination) {
        //TODO: - go to desination
    }
    
    func present(message: String) {
        let alertController = UIAlertController(title: nil, message: message, preferredStyle: .alert)
        self.viewController.present(alertController, animated: true, completion: nil)
    }
}
