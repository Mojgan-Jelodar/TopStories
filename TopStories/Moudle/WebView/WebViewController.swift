//
//  WebViewController.swift
//  TopStories
//
//  Created by Mozhgan on 9/7/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit
import WebKit

final class WebViewController: UIViewController {

    // MARK: - Public properties -

    var presenter: WebPresenterInterface!
    
    // MARK: - Private properties -
    private lazy var webView : WKWebView = {
        let webView = WKWebView()
        webView.translatesAutoresizingMaskIntoConstraints = false
        return webView
    }()

    // MARK: - Lifecycle -

    override func viewDidLoad() {
        super.viewDidLoad()
        self.setupView()
    }
    
    override func loadView() {
        super.loadView()
        presenter.loadView()
    }
    private func setupView() {
        view.addSubview(webView)
        let leadingConstraint = NSLayoutConstraint(item: self.webView, attribute: .leading, relatedBy: .equal, toItem: view, attribute: .leading, multiplier: Layout.multiplier, constant: .zero)
        let topConstraint = NSLayoutConstraint(item: self.webView, attribute: .top, relatedBy: .equal, toItem: view, attribute: .top, multiplier: Layout.multiplier, constant: .zero)
        let trailingConstraint = NSLayoutConstraint(item: webView, attribute: .trailing, relatedBy: .equal, toItem: view, attribute: .trailing, multiplier: Layout.multiplier, constant: .zero)
        let bottomConstraint = NSLayoutConstraint(item: webView, attribute: .bottom, relatedBy: .equal, toItem: view, attribute: .bottom, multiplier: Layout.multiplier, constant: .zero)
        view.addConstraints([leadingConstraint, topConstraint, trailingConstraint,bottomConstraint])
    }

}

// MARK: - Extensions -

extension WebViewController: WebViewInterface {
    func load(request: URLRequest) {
        webView.load(request)
    }
}
