//
//  StoryDetailFormatter.swift
//  TopStories
//
//  Created by Mozhgan on 9/5/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

final class StoryDetailFormatter {}

// MARK: - Extensions -

extension StoryDetailFormatter: StoryDetailFormatterInterface {
    func make(url : String) -> URL? {
        guard let url = URL(string: url) else {
            return nil
        }
        return url
    }
    
    func format(story: Story,isBookmarked : Bool) -> StoryViewModel {
        .init(title: story.title ?? "",
              description: story.abstract ?? "",
              cover: coverImage(story: story),
              date: dateString(date: story.updatedDate),
              url : story.url!,
              isBookMarked: isBookmarked)
    }
    
    private func dateString(date : Date?) -> String {
        guard let date = date else { return "" }
        let convertDateFormatter = DateFormatter()
        convertDateFormatter.dateFormat = "MMM dd yyyy h:mm "
        return convertDateFormatter.string(from: date)
    }
    
    private func coverImage(story : Story) -> Multimedia? {
        return story.multimedia?.first(where: {$0.format == .superJumbo})
    }
    
    private func largeThumbnail(story : Story) -> Multimedia? {
        return story.multimedia?.first(where: {$0.format == .largeThumbnail})
    }
}
struct StoryViewModel : CustomStringConvertible,Equatable {
    let title : String
    let description: String
    let cover : Multimedia?
    let date : String?
    let url : String
    private var _isBookmarked : Bool
    
    var isBookmarked : Bool {
        _isBookmarked
    }
    
    mutating func toggleBookmark() {
        _isBookmarked = !_isBookmarked
    }
    
    init(title : String,
         description : String,
         cover: Multimedia?,
         date : String,
         url : String,
         isBookMarked : Bool) {
        self.title = title
        self.description = description
        self.cover = cover
        self.date = date
        self.url = url
        self._isBookmarked = isBookMarked
        
    }
    
    static func == (lhs: StoryViewModel, rhs: StoryViewModel) -> Bool {
        lhs.url == rhs.url
    }
}
