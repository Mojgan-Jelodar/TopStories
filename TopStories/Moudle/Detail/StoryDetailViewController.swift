//
//  StoryDetailViewController.swift
//  TopStories
//
//  Created by Mozhgan on 9/5/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit
fileprivate extension Layout {
    static let coverHeight = 0.5
}

final class StoryDetailViewController: UIViewController {
    
    deinit {
        print("deinit :: \(self)")
    }
    
    // MARK: - Private properties -
    private lazy var titleLabel : UILabel = {
        let titleLabel = UILabel()
        titleLabel.font = .systemFont(ofSize: titleLabel.font.pointSize, weight: .heavy)
        titleLabel.numberOfLines = .zero
        titleLabel.lineBreakMode = .byWordWrapping
        titleLabel.translatesAutoresizingMaskIntoConstraints = false
        titleLabel.text = self.presenter.storyViewModel.title
        return titleLabel
    }()
    
    private lazy var decriptionLabel : UILabel = {
        let decriptionLabel = UILabel()
        decriptionLabel.font = .systemFont(ofSize: decriptionLabel.font.pointSize, weight: .semibold)
        decriptionLabel.numberOfLines = .zero
        decriptionLabel.lineBreakMode = .byWordWrapping
        decriptionLabel.translatesAutoresizingMaskIntoConstraints = false
        decriptionLabel.text = self.presenter.storyViewModel.description
        return decriptionLabel
    }()
    private lazy var dateLabel : UILabel = {
        let dateLabel = UILabel()
        dateLabel.font = .systemFont(ofSize: dateLabel.font.pointSize, weight: .medium)
        dateLabel.numberOfLines = .zero
        dateLabel.lineBreakMode = .byWordWrapping
        dateLabel.text = self.presenter.storyViewModel.date
        dateLabel.translatesAutoresizingMaskIntoConstraints = false
        return dateLabel
    }()
    
    private lazy var showMoreButton : UIButton = {
        let showMoreButton = UIButton()
        showMoreButton.addTarget(self, action: #selector(moreInfoPressed), for: .touchUpInside)
        showMoreButton.setTitle(Strings.StoryDetail.moreInfoTitle, for: .normal)
        showMoreButton.contentHorizontalAlignment = .leading
        return showMoreButton
    }()
    
    private lazy var contentViewStack : UIStackView = {
        let contentViewStack = UIStackView()
        contentViewStack.axis = .vertical
        contentViewStack.spacing = Layout.spacing8
        contentViewStack.translatesAutoresizingMaskIntoConstraints = false
        return contentViewStack
    }()
    
    private lazy var coverView : UIImageView = {
        let coverView = UIImageView()
        coverView.translatesAutoresizingMaskIntoConstraints = false
        coverView.backgroundColor = .lightGray
        coverView.contentMode = .scaleAspectFill
        coverView.loadImageFrom(urlString: self.presenter.storyViewModel.coverUrl ?? "")
        return coverView
    }()
    
    // MARK: - Public properties -
    
    var presenter: StoryDetailPresenterInterface!
    
    // MARK: - Lifecycle -
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.setupViews()
    }
    
    override func loadView() {
        super.loadView()
        if #available(iOS 13.0, *) {
            self.view.backgroundColor = .systemBackground
        } else {
            self.view.backgroundColor = .white
        }
    }
    
    @objc func moreInfoPressed() {
        presenter.moreInfoPressed()
    }
    
    // MARK: - Setup View -
    private func setupViews() {
        self.title = Strings.StoryListView.pageTitle
        self.view.addSubview(contentViewStack)
        self.contentViewStack.addArrangedSubview(coverView)
        self.contentViewStack.addArrangedSubview(titleLabel)
        self.contentViewStack.addArrangedSubview(dateLabel)
        self.contentViewStack.addArrangedSubview(decriptionLabel)
        self.contentViewStack.addArrangedSubview(showMoreButton)
        self.setConstraints()
    }
    private func setConstraints() {
        setupCoverViewConstraints()
    }
    
    private func setupContentViewConstraints() {
        let horizontalConstraint = NSLayoutConstraint(item: contentViewStack, attribute: .leading, relatedBy: .equal, toItem: view, attribute: .leading, multiplier: Layout.multiplier, constant: .zero)
        let verticalConstraint = NSLayoutConstraint(item: contentViewStack, attribute: .top, relatedBy: .equal, toItem: view, attribute: .top, multiplier: Layout.multiplier, constant: .zero)
        let trailingConstraint = NSLayoutConstraint(item: contentViewStack, attribute: .trailing, relatedBy: .equal, toItem: view, attribute: .trailing, multiplier: Layout.multiplier, constant: .zero)
        view.addConstraints([horizontalConstraint, verticalConstraint, trailingConstraint])
    }
    
    private func setupCoverViewConstraints() {
        let widthConstraint = NSLayoutConstraint(item: coverView, attribute: .width, relatedBy: .equal, toItem: view, attribute: .width, multiplier: Layout.multiplier, constant: .zero)
        let heightConstraint = NSLayoutConstraint(item: coverView, attribute: .height, relatedBy: .equal, toItem: view, attribute: .height, multiplier: Layout.coverHeight, constant: .zero)
        view.addConstraints([heightConstraint,widthConstraint])
    }
    
}

// MARK: - Extensions -

extension StoryDetailViewController: StoryDetailViewInterface {
}
